# -*- mode: nginx; mode: flyspell-prog;  ispell-local-dictionary: "american" -*-

### Upstream configuration for PHP FastCGI.

## Add as many servers as needed:
## Cf. http://wiki.nginx.org/HttpUpstreamModule.
## Note that this configuration assumes by default that keepalive
## upstream connections are supported and that you have a Nginx
## version with the fair load balancer.

## Add as many servers as needed. Cf. http://wiki.nginx.org/HttpUpstreamModule.
upstream phpcgi {
    ## Use the least connection algorithm for load balancing. This
    ## algorithm was introduced in versions 1.3.1 and 1.2.2.
    least_conn;

    server unix:/run/php/php7.1-fpm.sock;
    ## Create a backend connection cache. Note that this requires
    ## Nginx version greater or equal to 1.1.4.
    ## Cf. http://nginx.org/en/CHANGES. Comment out the following
    ## line if that's not the case.
    keepalive 5;
}

## Upstreams for different php versions.
## Set up php-fpm tcp ports and adjust this config.
## Uncomment needed
#upstream phpcgi_5.6 {
#    ## Use the least connection algorithm for load balancing. This
#    ## algorithm was introduced in versions 1.3.1 and 1.2.2.
#    least_conn;

#    server unix:/run/php/php5.6-fpm.sock;
#    ## Create a backend connection cache. Note that this requires
#    ## Nginx version greater or equal to 1.1.4.
#    ## Cf. http://nginx.org/en/CHANGES. Comment out the following
#    ## line if that's not the case.
#    keepalive 5;
#}


#upstream phpcgi_7.0 {
#    ## Use the least connection algorithm for load balancing. This
#    ## algorithm was introduced in versions 1.3.1 and 1.2.2.
#    least_conn;

#    server unix:/run/php/php7.0-fpm.sock;
#    ## Create a backend connection cache. Note that this requires
#    ## Nginx version greater or equal to 1.1.4.
#    ## Cf. http://nginx.org/en/CHANGES. Comment out the following
#    ## line if that's not the case.
#    keepalive 5;
#}

#upstream phpcgi_7.1 {
#    ## Use the least connection algorithm for load balancing. This
#    ## algorithm was introduced in versions 1.3.1 and 1.2.2.
#    least_conn;

#    server unix:/run/php/php7.1-fpm.sock;
#    ## Create a backend connection cache. Note that this requires
#    ## Nginx version greater or equal to 1.1.4.
#    ## Cf. http://nginx.org/en/CHANGES. Comment out the following
#    ## line if that's not the case.
#    keepalive 5;
#}

#upstream phpcgi_7.2 {
#    ## Use the least connection algorithm for load balancing. This
#    ## algorithm was introduced in versions 1.3.1 and 1.2.2.
#    least_conn;

#    server unix:/run/php/php7.2-fpm.sock;
#    ## Create a backend connection cache. Note that this requires
#    ## Nginx version greater or equal to 1.1.4.
#    ## Cf. http://nginx.org/en/CHANGES. Comment out the following
#    ## line if that's not the case.
#    keepalive 5;
#}



## The upstreams below are used only for monitoring php-fpm status,

## The PHP TCP upstream that corresponds to the first pool: status0.
upstream status0 {
    server unix:/run/php/php7.1-fpm.sock;
}

## The PHP TCP upstream that corresponds to the second pool: status1.
upstream status1 {
    server unix:/run/php/php7.1-2-fpm.sock;
}

## Status upstreams for different php versions.
## Uncomment needed.
#upstream status0_5.6 {
#    server unix:/run/php/php5.6-fpm.sock;
#}

## The PHP TCP upstream that corresponds to the second pool: status1.
#upstream status1_5.6 {
#    server unix:/run/php/php5.6-2-fpm.sock;
#}

#upstream status0_7.0 {
#    server unix:/run/php/php7.0-fpm.sock;
#}

## The PHP TCP upstream that corresponds to the second pool: status1.
#upstream status1_7.0 {
#    server unix:/run/php/php7.0-2-fpm.sock;
#}

#upstream status0_7.1 {
#    server unix:/run/php/php7.1-fpm.sock;
#}

## The PHP TCP upstream that corresponds to the second pool: status1.
#upstream status1_7.1 {
#    server unix:/run/php/php7.1-2-fpm.sock;
#}

#upstream status0_7.2 {
#    server unix:/run/php/php7.2-fpm.sock;
#}

## The PHP TCP upstream that corresponds to the second pool: status1.
#upstream status1_7.2 {
#    server unix:/run/php/php7.2-2-fpm.sock;
#}
